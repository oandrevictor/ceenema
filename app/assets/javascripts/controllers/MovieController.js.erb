controllers = angular.module('controllers');

//This controller gets the information about a specific movie and gives it back to the scope.

controllers.controller("MovieController", [ '$scope', '$routeParams', '$resource','$location', 'flash', '$http', '$window', "$sce","$mdDialog",
function($scope,$routeParams,$resource, $location, flash, $http, $window, $sce,  $mdDialog) {
    var movie_preloaded = false;
    //Resource -> Used for CRUD operations
    Movie = $resource('/movies/:movieId', {movieId: "@id", format: 'json'},
        {
            'save': {method: 'PUT'},
            'create': {method: 'POST'}
        }
    );

    //Preloader-overlay functions
    $scope.openNav = function(){
        document.getElementById("imdbOverlay").style.width = "100%";
    }
    /* Close when  clicks on the "x" symbol inside the overlay */
    $scope.closeNav = function(){
        document.getElementById("imdbOverlay").style.width = "0%";
    };

    var loadVideo = function()
    {
        $scope.config = {
            sources: [
                {
                    src: $sce.trustAsResourceUrl($scope.movie.trailer),
                    type: "video/mp4"
                }
            ],
            theme: "videogular-themes-default/videogular.css",
        }
    }


    //Checks if the controller is handling a new movie or a existing
    if ($routeParams.movieId) {
        $scope.spinner.active = true;
        Movie.get({movieId: $routeParams.movieId}, function (movie) {
                $scope.movie = movie;
                $scope.spinner.active = false;
                $scope.image = movie.imgurl;
                loadVideo()//load video of the movie
            $scope.spinner.active=false;
            }, //sets the movie case it exists
            function (httpResponse) {
                $scope.movie = null;
                flash.error = "Movie not found - ID #{$routeParams.movieId}";
            }) //sets to null and flash error otherwise
    }
    else {
        $scope.image = "<%= image_url("bgblue.jpg") %>"; // load default image
        $scope.spinner.active = false; // nothing is being loaded now.
        $scope.movie = {};
        $scope.openNav(); // Show preload option to user;

    };

    // obtains the image-poster of the new movie
    var getImage = function(){
        $http({
            method: 'GET',
            url: 'http://www.theimdbapi.org/api/movie?movie_id=' + $scope.movie.imdb_id
        }).then(function successCallback(response) {
            $scope.image = response.data.poster.large;
            $scope.$emit('finishEvent');
            if (!$scope.movie.id){
                createNew();
            }
        }, function errorCallback(response) {
        });
    }

    // Preload the informations of the movie using the imdb api
    $scope.preload = function(){
        $scope.spinner.active = true;
        $http({
            method: 'GET',
            url: 'http://www.theimdbapi.org/api/movie?movie_id=' + $scope.movie.imdb_id
        }).then(function successCallback(response) {
            movie_preloaded=true;
            $scope.spinner.active = false;
            imdb_response = response.data;
            if(imdb_response.poster) $scope.movie.imgurl = imdb_response.poster.large;
            if(imdb_response.title) $scope.movie.name = imdb_response.title;
            if(imdb_response.release_date) $scope.movie.release = new Date(imdb_response.release_date);
            if(imdb_response.storyline) $scope.movie.sinopse = imdb_response.storyline;
            if(imdb_response['length']) $scope.movie.runtime = parseInt(imdb_response['length']);
            if(imdb_response.genre) $scope.movie.genre = imdb_response.genre[0];
            console.log(imdb_response.trailer)
            if(imdb_response.trailer[0]) $scope.movie.trailer = imdb_response.trailer[0].videoUrl;
            if($scope.movie.imgurl) $scope.image = $scope.movie.imgurl;
            $scope.closeNav();
        }, function errorCallback(response) {
            $scope.closeNav();
        });
    }


    // Used to create and update movies
    $scope.save = function(){
        onError = function(_httpResponse) {
            flash.error = "Something went wrong"
        }
        if ($scope.movie.id) {
            ($scope.movie.$save)(
                function (){ // if saving works as expected, redirect to movie page.
                    $location.path("/movies/"+$scope.movie.id)
                },
                onError()//otherwise
            )
        }else {
            $scope.spinner.active = true;
            if (!movie_preloaded) {
                getImage(); // If the movie was not preloaded, get the image from imdb.
            }else{
                createNew(); // Otherwise, just save in the database;
            }
        }
    }

   // Create New Movie in the database
    var createNew = function(){
        $scope.movie.imgurl = $scope.image;
        Movie.create($scope.movie,
            function (newMovie){
                $scope.spinner.active = false;
                $location.path("/movies/"+newMovie.id)
            }, // if creating the new movie works
            onError()
        )
    }

    $scope.delete = function() {
        $scope.spinner.active = true;
        ($scope.movie.$delete)(
            function (){ // if saving works as expected, redirect to movie page.
                $scope.back()
                $scope.spinner.active=false;
            },
            function(){
                $scope.back()
                $scope.spinner.active=false;
            }//otherwise
        )

    }

    $scope.edit = function () {
        $location.path("/movies/" + $scope.movie.id + "/edit");
    }

    //Navigation Controls//

    $scope.cancel = function(){
        $scope.spinner.active = false;
        if ($scope.movie.id) {
            $location.path("/movies/" + $scope.movie.id);
        } else {
            $location.path("/")
        }
    }
    //Go-back function
    $scope.back = function(){
        $window.history.back();
    };

    $scope.showActionToast = function() {
        var pinTo = $scope.getToastPosition();
        var toast = $mdToast.simple()
            .textContent('Marked as read')
            .action('UNDO')
            .highlightAction(true)
            .highlightClass('md-accent')// Accent is used by default, this just demonstrates the usage.
            .position(pinTo);

        $mdToast.show(toast).then(function(response) {
            if ( response == 'ok' ) {
                alert('You clicked the \'UNDO\' action.');
            }
        });
    };

    // CONFIRMATION DIALOG (DELETE)
    $scope.showConfirm = function(ev) {
        // Appending dialog to document.body to cover sidenav in docs app
        var confirm = $mdDialog.confirm()
            .title('Would you like to delete this movie?')
            .textContent('This action is permanent and can not be undone.')
            .ariaLabel('Lucky day')
            .targetEvent(ev)
            .ok('Delete')
            .cancel('Cancel');

        $mdDialog.show(confirm).then(function() {
            $scope.delete();
        }, function() {
            $scope.status = 'You decided to keep the movie.';
        });
    };





}
])
